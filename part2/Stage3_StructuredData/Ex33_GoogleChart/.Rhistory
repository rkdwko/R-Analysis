theme(axis.text.x=element_text_angle=45.hjust=1,vjust=1,colour="black",size=8))
ggplot(sort_kem3,aes(x=이름,y=점수,fill=과목)) +
geom_bar(stat="identity") +
geom_text(aes(y=label,label=paste(점수,'점')),colour="black",size=4) +
guides(fill=guide_legend(reverse=T)) +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour="black",size=8))
score <- read.table("학생별전체성적_new.txt",header=T,sep=",")
score <- read.table("data/학생별전체성적_new.txt",header=T,sep=",")
score
score[,c("이름","영어")]
ggplot(score,aes(x=영어,y=reorder(이름,영어))) +
geom_point(size=6) +
theme_bw() +
theme(panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(color="red",linetype="dashed"))
ggplot(score,aes(x=영어,y=reorder(이름,영어))) +
geom_segment(aes(yend=이름),xend=0,color="blue") +
geom_point(size=6,color="green") +
theme_bw() +
theme(panel.grid.major.y=element_blank())
library(gridExtra)
install.packages("gridExtar")
library(gridExtra)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
mtcars
str(mtcars)
ggplot(mtcars, aes(x=hp , y=mpg)) +
geom_point()
ggplot(mtcars, aes(x=hp , y=disp)) +
geom_point()
ggplot(mtcars, aes(x=hp , y=disp)) +
geom_point(colour='blue')
ggplot(mtcars, aes(x=hp , y=mpg)) +
geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(x=hp , y=mpg)) +
geom_point(aes(color=factor(am), size=5))
ggplot(mtcars, aes(x=hp , y=mpg)) +
geom_point(aes(color=factor(am), size=wt))
ggplot(mtcars, aes(x=hp , y=mpg)) +
geom_point(aes(shape=factor(am), size=wt))
ggplot(mtcars, aes(x=hp , y=mpg)) +
geom_point(aes(shape=factor(am), color=wt))
# 종류별로 크기, 모양, 색상 지정하기
ggplot(mtcars, aes(x=hp , y=mpg)) +
geom_point(aes(shape=factor(am), size = wt))+
scale_color_manual(values=c("red","green"))
ggplot(mtcars, aes(x=hp , y=mpg)) +
geom_point(color='red') +
geom_line(colour='blue')
ggplot(mtcars, aes(x=hp , y=mpg)) +
geom_point(aes(shape=factor(am), color=factor(am), size = wt)) +
scale_color_manual(values=c("red","green")) +
labs(x="마력", y="연비(mile/gallon)")
three <- read.csv("data/학생별과목별성적_3기_3명.csv",header=T)
three
sort_score <- arrange(three,이름,과목)
install.packages(dplyr)
sort_score <- arrange(three,이름,과목)
install.packages(dplyr)
install.packages(dplyr)
library(dplyr)
three <- read.csv("data/학생별과목별성적_3기_3명.csv",header=T)
three
sort_score <- arrange(three,이름,과목)
sort_score
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름)) +
geom_line()
install.packages("ggplot2")
library(ggplot2)
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름)) +
geom_line()
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름)) +
geom_line() +
geom_point()
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름)) +
geom_line() +
geom_point(size=6,shape=22)
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름,fill=이름)) +
geom_line() +
geom_point(size=6,shape=22)
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름,fill=이름)) +
geom_line() +
geom_point(size=6,shape=22) +
ggtitle("학생별 과목별 성적")
dis <- read.csv("1군전염병발병현황_년도별.csv",stringsAsFactors=F)
dis <- read.csv("data/1군전염병발병현황_년도별.csv",stringsAsFactors=F)
dis
ggplot(dis,aes(x=년도별,y=장티푸스,group=1)) +
geom_line()
ggplot(dis,aes(x=년도별,y=group=1)) +
geom_area()
ggplot(dis,aes(x=년도별,y=장티푸스,group=1)) +
geom_area()
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름)) +
geom_line() +
geom_point()
ggplot(dis,aes(x=년도별,y=장티푸스,group=1)) +
geom_area()
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름)) +
geom_line() +
geom_point()
ggplot(dis,aes(x=년도별,y=장티푸스,group=1)) +
geom_area(fill="cyan",alpha=0.4) +
geom_line()
anscombe
str(anscombe)
ans_x_mean <- anscombe %>%
select(x1,x2,x3,x4) %>%
summarise_each(list(mean), x1, x2, x3, x4)
ans_x_mean
ans_y_mean <- anscombe %>%
select(y1,y2,y3,y4) %>%
summarise_each(list(mean), y1, y2, y3, y4)
ans_y_mean
ans_x_var <- anscombe %>%
select(x1,x2,x3,x4) %>%
summarise_each(list(var), x1, x2, x3, x4)
ans_x_var
ans_y_var <- anscombe %>%
select(y1,y2,y3,y4) %>%
summarise_each(list(var), y1, y2, y3, y4)
ans_y_var
p1 <- ggplot(anscombe) +
geom_point(aes(x1, y1), color = "darkorange", size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(0, 20, 2)) +
scale_y_continuous(breaks = seq(0, 12, 2)) +
geom_abline(intercept = 3, slope = 0.5,
color = "cornflowerblue") +
expand_limits(x = 0, y = 0) +
labs(title = "dataset 1")
p1
p2 <- ggplot(anscombe) +
geom_point(aes(x2, y2), color = "darkorange", size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(0, 20, 2)) +
scale_y_continuous(breaks = seq(0, 12, 2)) +
geom_abline(intercept = 3, slope = 0.5,
color = "cornflowerblue") +
expand_limits(x = 0, y = 0) +
labs(title = "dataset 2")
p2
p3 <- ggplot(anscombe) +
geom_point(aes(x3, y3), color = "darkorange", size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(0, 20, 2)) +
scale_y_continuous(breaks = seq(0, 12, 2)) +
geom_abline(intercept = 3, slope = 0.5,
color = "cornflowerblue") +
expand_limits(x = 0, y = 0) +
labs(title = "dataset 3")
p3
p4 <- ggplot(anscombe) +
geom_point(aes(x4, y4), color = "darkorange", size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(0, 20, 2)) +
scale_y_continuous(breaks = seq(0, 12, 2)) +
geom_abline(intercept = 3, slope = 0.5,
color = "cornflowerblue") +
expand_limits(x = 0, y = 0) +
labs(title = "dataset 4")
p4
p4 <- ggplot(anscombe) +
geom_point(aes(x4, y4), color = "darkorange", size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(0, 20, 2)) +
scale_y_continuous(breaks = seq(2, 14, 2)) +
geom_abline(intercept = 3, slope = 0.5,
color = "cornflowerblue") +
expand_limits(x = 0, y = 0) +
labs(title = "dataset 4")
p4
p4 <- ggplot(anscombe) +
geom_point(aes(x4, y4), color = "darkorange", size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(0, 20, 2)) +
scale_y_continuous(breaks = seq(0, 12, 2)) +
geom_abline(intercept = 3, slope = 0.5,
color = "cornflowerblue") +
expand_limits(x = 0, y = 0) +
labs(title = "dataset 4")
p4
grid.arrange(p1,p2,p3,p4, ncol=2, top = 'Anscombe`s Quartet)
grid.arrange(p1,p2,p3,p4, ncol=2, top = 'Anscombe`s Quartet')
grid.arrange(p1,p2,p3,p4, ncol=2, top = "Anscombe`s Quartet")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1,p2,p3,p4, ncol=2, top = "Anscombe`s Quartet")
install.packages("ppglot2")
library(ggplot2)
mpg
View(mpg)
var1 <- 1:5
plot(var1)
var1 <- 5:1
plot(var1)
var2 <- c(2,2,2)
plot(var2)
x <- 1:3
y <- 4:2
plot(x, y)
plot(x, y, xlim = c(0, 5), ylim = c(0, 5))
plot(x, y, xlim = c(0, 5), ylim = c(0, 5), xlab = "X축값", ylab = "Y축값", main = "Plot Test")
var1 <- 1:5
plot(var1)
var2 <- c(2,2,2)
plot(var2)
x <- cty
y <- hwy
plot(x, y)
x <- 1:3
y <- 4:2
plot(x, y)
plot(x, y, xlim = c(0, 5), ylim = c(0, 5))
plot(x, y, xlim = c(0, 5), ylim = c(0, 5), xlab = "cty", ylab = "hwy", main = "cty와 hwy의 관계")
var1 <- 1:5
plot(var1)
var2 <- c(2,2,2)
plot(var2)
x <- 1:3
y <- 4:2
plot(x, y)
plot(x, y, xlim = c(0, 5), ylim = c(0, 5))
plot(x, y, xlim = c(0, 5), ylim = c(0, 5), xlab = "cty", ylab = "hwy", main = "cty와 hwy의 관계")
#1. mpg 데이터의 cty(도시 연비)와 hwy(고속도로 연비) 간에 어떤 관계가 있는지 알아보려고 합니다.
#   x축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.
install.packages("ppglot2")
library(ggplot2)
mpg
View(mpg)
```{r setup, include=FALSE}
df_suv <- mpg %>%
filter(class == 'suv') %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
ggplot(df_suv, aes(x=reorder(manufacturer, -mean_cty), y=mean_cty, fill=manufacturer)) +
geom_col()
#4
ggplot(mpg, aes(x=class, fill=class)) +
geom_bar()
#5
ggplot(economics, aes(x = date, y = psavert)) +
geom_line()
#6
df_3class <- mpg %>%
filter(class %in% c("compact", "subcompact", "suv"))
ggplot(df_3class, aes(x=class, y=cty, fill=class)) +
geom_boxplot()
#7
ggplot(diamonds, aes(x=cut, fill=cut)) +
geom_bar()
#7-2
df_cut <- diamonds %>%
group_by(cut) %>%
summarise(mean_price = mean(price))
ggplot(df_cut, aes(x=cut, y=mean_price, fill=cut)) +
geom_col()
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages('rJava')
library(rJava)
install.packages('KoNLP')
library(KoNLP)
library(wordcloud)
useSejongDic()
data1 <- readLines("remake.txt")
install.packages("KoNLP")
install.packages("wordcloud")
library(KoNLP)
library(wordcloud)
useSejongDic()
data1 <- readLines("remake.txt")
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/Ex34_insurance')
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로.csv",
stringsAsFactors = FALSE)
colname <- count$년도
colname
v1 <- count[,2]/100000
v2 <- count[,3]/100000
v3 <- count[,4]/100000
v4 <- count[,5]/100000
v5 <- count[,6]/100000
v6 <- count[,7]/100000
v7 <- count[,8]/100000
v8 <- count[,9]/100000
v9 <- count[,10]/100000
v10 <- count[,11]/100000
plot(v1,xlab="",ylab="",ylim=c(0,6000),axes=FALSE,col="violet",type="o",lwd=2,
main=paste("연도별 요양 기관별 보험 청구 건수(단위:십만건)","\n",
"출처:건강보험심사평가원"))
axis(1,at=1:10,label=colname,las=2)
axis(2,las=1)
lines(v2, col="blue",type="o",lwd=2)
lines(v3, col="red",type="o",lwd=2)
lines(v4, col="black",type="o",lwd=2)
lines(v5, col="orange",type="o",lwd=2)
lines(v6, col="green",type="o",lwd=2)
lines(v7, col="cyan",type="o",lwd=2)
lines(v8, col="yellow",type="o",lwd=2)
lines(v9, col="brown",type="o",lwd=2)
lines(v10, col="pink",type="o",lwd=2)
abline(h=seq(0,6000,500),v=seq(1,100,1),lty=3,lwd=0.2)
col <- names(count[1,2:10])
colors <- c("violet","blue","red","black","orange","green","cyan","yellow","brown","pink")
legend(1,6000,col,cex=0.8,col=colors,lty=1,lwd=2,bg="white")
count <- read.csv("연도별요양기관별보험청구금액_2004_2013_세로.csv",
stringsAsFactors = FALSE)
colname <- count$년도도
colname <- count$년도도
v1 <- count[,2]/1000000
v2 <- count[,3]/1000000
v3 <- count[,4]/1000000
v4 <- count[,5]/1000000
v5 <- count[,6]/1000000
v6 <- count[,7]/1000000
v7 <- count[,8]/1000000
v8 <- count[,9]/1000000
v9 <- count[,10]/1000000
v10 <- count[,11]/1000000
colname <- count$년도
v1 <- count[,2]/1000000
v2 <- count[,3]/1000000
v3 <- count[,4]/1000000
v4 <- count[,5]/1000000
v5 <- count[,6]/1000000
v6 <- count[,7]/1000000
v7 <- count[,8]/1000000
v8 <- count[,9]/1000000
v9 <- count[,10]/1000000
v10 <- count[,11]/1000000
"출처:건강보험심사평가원"))
plot(v1,xlab="",ylab="",ylim=c(0,10000),axes=FALSE,col="violet",type"o",lwd=2,
main=paste("연도별 요양 기관별 보험 청구 금액 현황(단위:백만원)","\n",
"출처:건강보험심사평가원"))
plot(v1,xlab="",ylab="",ylim=c(0,10000),axes=FALSE,col="violet",type"o",lwd=2,
main=paste("연도별 요양 기관별 보험 청구 금액 현황(단위:백만원)","\n",
"출처:건강보험심사평가원"))
plot(v1,xlab="",ylab="",ylim=c(0,10000),axes=FALSE,col="violet",type"o",lwd=2,main=paste("연도별 요양 기관별 보험 청구 금액 현황(단위:백만원)","\n",
"출처:건강보험심사평가원"))
plot(v1,xlab="",ylab="",ylim=c(0,10000),axes=FALSE,col="violet",type"o",lwd=2,main=paste("연도별 요양 기관별 보험 청구 금액 현황(단위:백만원)","\n","출처:건강보험심사평가원"))
count
options(digits = 2)
ggplot(count, aes(x=년도, y=건수, fill=병원종류, color=병원종류))+
geom_line(linetype-1, size=1)+
geom_point(size=3)+
geom_hline(yintercept-seq(0,8000,1000), lty='dotted', size=0.1)+
theme_bw(base_family="malgun", base_size = 10)+
ggtitle(paste('연도별 요양기관별 보험청구금액 2001~2013','\n',
'(단위:백만원)'))+
theme(plot.title = element_text(family="malgun",
face="bold",
hjust=0.5,
size=15,
color="darkblue"))
install.packages("ggplot")
library(ggplot)
count <- read.csv("연도별요양기관별보험청구금액_2004_2013_세로.csv",
stringsAsFactors = FALSE)
count
options(digits = 2)
ggplot(count, aes(x=년도, y=건수, fill=병원종류, color=병원종류))+
geom_line(linetype-1, size=1)+
geom_point(size=3)+
geom_hline(yintercept-seq(0,8000,1000), lty='dotted', size=0.1)+
theme_bw(base_family="malgun", base_size = 10)+
ggtitle(paste('연도별 요양기관별 보험청구금액 2001~2013','\n',
'(단위:백만원)'))+
theme(plot.title = element_text(family="malgun",
face="bold",
hjust=0.5,
size=15,
color="darkblue"))
install.packages("ggplot2")
library(ggplot2)
count <- read.csv("연도별요양기관별보험청구금액_2004_2013_세로.csv",
stringsAsFactors = FALSE)
count
options(digits = 2)
ggplot(count, aes(x=년도, y=건수, fill=병원종류, color=병원종류))+
geom_line(linetype-1, size=1)+
geom_point(size=3)+
geom_hline(yintercept-seq(0,8000,1000), lty='dotted', size=0.1)+
theme_bw(base_family="malgun", base_size = 10)+
ggtitle(paste('연도별 요양기관별 보험청구금액 2001~2013','\n',
'(단위:백만원)'))+
theme(plot.title = element_text(family="malgun",
face="bold",
hjust=0.5,
size=15,
color="darkblue"))
count <- read.csv("연도별요양기관별보험청구금액_2004_2013_세로.csv",
stringsAsFactors = FALSE)
count
count <- melt(count, id=c('년도'),
variable.name='병원종류',value.name='금액')
count$금액 <- count$금액/1000000
options(digits = 2)
ggplot(count, aes(x=년도, y=건수, fill=병원종류, color=병원종류)) +
geom_line(linetype-1, size=1) +
geom_point(size=3) +
geom_hline(yintercept=seq(0,8000,1000), lty='dotted', size=0.1) +
theme_classic(base_family="malgun", base_size = 10) +
ggtitle(paste('연도별 요양기관별 보험청구금액 2001~2013','\n',
'(단위:백만원)'))+
theme(plot.title = element_text(family="malgun",
face="bold",
hjust=0.5,
size=15,
color="darkblue"))
setwd('D:\Workspace\R_Data_Analysis\part2\stage3_StructuredData\도전')
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/도전')
count <- read.csv("주요선수별성적-2013년.csv",
stringsAsFactors = FALSE)
colname <- count$년도
colname
v1 <- count[,2]/100000
v2 <- count[,3]/100000
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/도전')
count <- read.csv("주요선수별성적-2013년.csv",
stringsAsFactors = FALSE)
colname <- count$년도
colname
v1 <- count[,2]/100000
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/도전')
count <- read.csv("주요선수별성적-2013년.csv",
stringsAsFactors = FALSE)
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/도전')
v1 <- count[,2]/100000
v2 <- count[,3]/100000
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/도전')
count <- read.csv("주요선수별성적-2013년.csv",
stringsAsFactors = FALSE)
colname <- count$년도
colname
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/Ex34_insurance')
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로.csv",
stringsAsFactors = FALSE)
colname <- count$년도
colname
v1 <- count[,2]/100000
v2 <- count[,3]/100000
v3 <- count[,4]/100000
v4 <- count[,5]/100000
v5 <- count[,6]/100000
v6 <- count[,7]/100000
v7 <- count[,8]/100000
v8 <- count[,9]/100000
v9 <- count[,10]/100000
v10 <- count[,11]/100000
plot(v1,xlab="",ylab="",ylim=c(0,6000),axes=FALSE,col="violet",type="o",lwd=2,
main=paste("연도별 요양 기관별 보험 청구 건수(단위:십만건)","\n",
"출처:건강보험심사평가원"))
axis(1,at=1:10,label=colname,las=2)
axis(2,las=1)
lines(v2, col="blue",type="o",lwd=2)
lines(v3, col="red",type="o",lwd=2)
lines(v4, col="black",type="o",lwd=2)
lines(v5, col="orange",type="o",lwd=2)
lines(v6, col="green",type="o",lwd=2)
lines(v7, col="cyan",type="o",lwd=2)
lines(v8, col="yellow",type="o",lwd=2)
lines(v9, col="brown",type="o",lwd=2)
lines(v10, col="pink",type="o",lwd=2)
abline(h=seq(0,6000,500),v=seq(1,100,1),lty=3,lwd=0.2)
col <- names(count[1,2:10])
colors <- c("violet","blue","red","black","orange","green","cyan","yellow","brown","pink")
legend(1,6000,col,cex=0.8,col=colors,lty=1,lwd=2,bg="white")
install.packages("ggplot2")
install.packages("ggplot2")
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/도전')
count <- read.csv("주요선수별성적-2013년.csv",
stringsAsFactors = FALSE)
colname <- count$연봉
colname
v1 <- count[,2]/100000
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/도전')
count <- read.csv("주요선수별성적-2013년.csv",
stringsAsFactors = FALSE)
data1 <- read.csv("주요선수별성적-2013년.csv",header=T)
data1
barplot(as.matrix(data1[1:9,2:11]),
main=paste("야구 선수별 연봉 대비 출루율 분석","\n",
"출처[한국야구위원회]"), ylab="연봉",beside=T,
col=rainbow(8),ylim=c(0,350))
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/Ex34_insurance')
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/Ex33_Google')
library(googleVis)
data <- read.csv("2013년_서울_구별_주요과목별병원현황_구글용.csv")
data
hos <- gvisCloumnChart(dta, options=list(title="지역별 병원현황",
height=400,weight=500))
hos <- gvisCloumnChart(dta, options=list(title="지역별 병원현황",height=400,weight=500))
hos <- gvisCloumnChart(data, options=list(title="지역별 병원현황",height=400,weight=500))
hos <- googlevisCloumnChart(data, options=list(title="지역별 병원현황",height=400,weight=500))
hos <- GooglevisCloumnChart(data, options=list(title="지역별 병원현황",height=400,weight=500))
hos <- gvisColumnChart(data, options=list(title="지역별 병원현황",height=400,weight=500))
plot(hos)
setwd('D:/Workspace/R_Data_Analysis/part2/stage3_StructuredData/Ex33_Google')
library(googleVis)
data <- read.csv("2013년_서울_구별_주요과목별병원현황_구글용.csv")
data
hos <- gvisColumnChart(data, options=list(title="지역별 병원현황",height=400,weight=500))
plot(hos)
header <- hos$header
header
